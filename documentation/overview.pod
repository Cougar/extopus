=head1 Extopus Overview

Extopus is an aggregating front end for monitoring systems.

=head2 Data Model

=head3 Nodes

Extopus is built arround a notion of nodes. Each node has a set of
properties associated with it, they fall into three categories:
mandatory (xm_*), optional (xo_*) and user defined. Extopus can
use common property values between nodes to build arbitrary tree
structures.

=over

=item xm_src

the source of this node. This is an internal connection to a extopus plugin instance
providing this information. The plugin may provide additional information at runtime.

=item mx_id

a node id which can be used to retrieve additional information about this node via the source plugin instance.
The id is only unique within the scope of the plugin.

=item mx_expiry (epoch)

when can this node be purged

=item mx_name

some friendly name for the node

=item mo_country, mo_state, mo_town, mo_zip, mo_street, mo_building, mo_floor, mo_room, mo_rack, mo_shelf, mo_long, mo_lat

information about the physical location of the node

=item mo_vendor, mo_model, mo_serial, mo_slot, mo_port

information about the device this node is associated with

=item mo_user, mo_groups[]

who does this node belong to, to be used in determining access privileges

=back

Additional site specific information can be associated with the node for
use in plugins.

As a node is selected, extopus will ask the associated plugin for futher
information about how to display details on the node. The plugin will then
either access the linked backend monitoring system to grab additional
information or it will pull the data from the extopus node database.

=head3 Node Database

All nodes are stored in a no-sql database (mongodb) with the ability to
store arbitrary attributes for each node without requiering any schema changes.

The database can gets populated via the plugins integrating the different
backend systems. There are three ways of database population

=over

=item periodically

plugins are asked for re-populating the database by a cron-like facility.

=item push

external systems can push updates to the node database

=item login event

plugins poll data provider upon user login for appropriate nodes, this may
involve authenticating with the data provider to get access to appropriate
information.

The node database is no permanent data repository. Every node has an expiery
property which will cause its own removal from the database.

=back

=head3 Access Control

And authentication and authorization is governed by an authentication
plugin. It governs which nodes are accessible to a user and within the nodes
which attributes are available. The access rules not only apply to the user,
but also to other plugins. If a plugin was to draw node locations on a
google map, it would only get access to the nodes the user can access too.

=head2 User Interface

...
